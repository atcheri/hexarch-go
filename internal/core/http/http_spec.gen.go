// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAAA//9ZaS6ClhMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

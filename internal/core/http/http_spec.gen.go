// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xZ3XLbuhF+lR2czvSG+vFP+qOr5iSOx9M08cS+6cSenjW5InFCAgywtKx69FR9hL5Y",
	"BwApkhJlSWecOb2KKQCL/fl2v13kWcS6KLUixVbMnkWJBgtiMv7rkvja6F8p5luDyubIUiv7EVVaYUr2",
	"2m12+xKysZGlWxUz8RZyaRn0HJqdEOuErIgEPWFR5iRm4oM2cKHSXNoMUCXwwZCKswgqS/AVSEUwN3AP",
	"I/hsYK4NwLU2XKVkKYJLMgUqf+ymRCXt+lzJESQUAVm4v1MiEtIp9L0isxSRUFi4q/NGfxEJG2dUoLNB",
	"MhXeaF6WbpdlI1UqVlHzAxqDS7FaRaL2yScsaIcLbjMCd5tzAmcEZTgx7rrgq2CDSRW7I6N6w+hE3NdK",
	"l8hZq3PZXikiYeh7JQ0lYsamoq4VG8qvItGJ3FXygroy2VD2jxa4PdvX/OT07Hx0/uZPfx795a/Tk9Hp",
	"2fmbHYpz9/qjVF+5zbbUypKPy8+YfKHvFVl2X7FWTMr/iWWZy9hfMfnVOoOeO2L/YGguZuKnSQv0SVi1",
	"kwtjtAlX9R3S3jWGL8SVUZTAIiMVHITLXGMC0oJUj5jLZOxw8s4QMnX8/aVWf9vhzYpzOULsDyZdd3uB",
	"F4nk48UpoEQOibtSTEZhfkPmkUyw/Yd7srkUwq1Qb4zEJ80fdKWSV1OhEbhTle1AmhBjSsCQtboyMcEC",
	"LSjNMHeyvN8GSuB7yonp0Pgmfnc3HvCNlrtkXxJ3Be/xTZ2UPkNuqjgma+dVDqYj4RHzyv/BmjEXs7Oo",
	"m5VWzL4+i2+0FDORaV9e2gLpllztFjNBrgQwPXGzbxWt10pu12K0KFb3bjUIdQZgzHvkxtzZui26XWbd",
	"k44PumKo7CHi13t3yLf6wRCo//7HuivuPYRa7JVGl2RYBl/XvhyqpH4JsNCV8izYc/aaTqRiSsmnQj8a",
	"QyIbQt0Qteasl/Kig62/0/L97edBTmvr8lexqbA39X59SD84yA5l2CVxT0XP3AipfCTV0IpovepVD1Vz",
	"Ow/q+vuzTpbDPmmq8INOlsC6rqKAG6zVD1uI+gDJezQNkb9H9RCxdj3mTkdBeH1k212RCFXjFUzdLiiN",
	"q4MifZuHTRuwYEhnx0F7NcY8/zz3WfcSEA+J9Oo+OsB+R3AbgXaqNozWF3DDqBI0SaCedWUcb/mJ3Pq/",
	"ggcGkFCQtZjScIQSYpS5JxK0WjWtlBc5bpO+lRbao01RQUW3NnBoI2IddWtxrY5Dkezz48FRawj7+UVv",
	"9c2oSQl+8eWwi9I1s3q8ciZtUxd+Ocbgbfvut9m+YfT2zk0E9NtjVxq36vzOgnFYYdhXEraL85YGdfoW",
	"+PSRVMqZmJ1OI1FI1XyeDMCrw4XPR9PEIRwRCk17zTA9SDXXTRPjiN3hpkCZu8GAsPib/xjHumgHhs8V",
	"wy1h4bNAbFHMhesnISPjKv0i0znBI5kHbV0Orjc2+ff2+gqkggLNt0QvlANdgXynfoIrxUbX09ed+qgN",
	"FSBLWxXkVm90QfCe5lJJj9vNHc50GVPdYNWavy0xzghOx1MRico4IzPm0s4mk8ViMUa/PNYmndRn7eTj",
	"1buLTzcXo9PxdJxxkXu3Yxo6mL7h/2hsGDBTmxSV/HdoLRlTr2CtVXfNp/HhYuvM3JS4JvKjhHW73w2B",
	"t9067oAk2b8RvKuYpUqBkpQg1zHmjY1umJCxj6+IxCMZGxSYjk9EJJ5GuU51KHF8G9rSzh2AZQl+RxOm",
	"CZZykujYTtBaYjtplCUvaVyGpHoaMaaXRldlCFCtvv8F3MV16HoGuUYyErokhaUUM3E2PvEAcWOyT0p/",
	"ebdITp470/4qVFfH90PMIy2QSkotFQPmuV5YWOqq0yNgnm+634appCbiXo925/L6TgivsGmm9tnOzsV6",
	"Q9onox1c0m6ZbL2duICbfjvxKuPgIc3W4JAYahwkyNjttQZ92KZC/63idHq+S7/1vsn+uXIVifNDJK1n",
	"6VUk3kyn+w8MPQX4vrwqCjTLdcTXINkcCQaBHomU+DiUpsTDEO2islZifFdNp2fxg/H/0p36p64gRgWY",
	"Ww1zmTtmeFiCLSmW86WrHFrlSy97TVTAGbK/fYGKx74M9bE+/Oj5CkCP9p456L01JEwPbNPfBLbuQ8Pv",
	"iDQ3NB4Js1LbI3HGGjBJ+jNDjbEAFxk3yTwAiWttBwLz/1v7Dpq0Dqh965Fa0aLnuYXkLEybUd3I0wu1",
	"8GQ/THa/nXpkHgC0zvPw62EzqHUcPFfRPkqfPPdexT3Fl9XxiA5jsEqg0ImcL38zuqsfA+799W7g/yZ+",
	"VErsf8c4JCG2Hx5eB/67Xvp/V/A7pY6E/mr1vwAAAP//afs9JlEcAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

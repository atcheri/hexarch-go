// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xa624buRV+lQNugfwZXSzbu139abOJYxhNEyM2ULSx0aVnjjTczJATkmNZFfRUfYS+",
	"WEFy7kNZGsdG8suWSJ7rx3OjNiQUaSY4cq3IfEMyKmmKGqX9dI76Uoo/MNTXknKVUM0EV+8pX+Z0ierS",
	"bDb7IlShZJlZJXPyGhKmNIgFlDshFBEqEhB8oGmWIJmTd0LCGV8mTMVAeQTvJPIwDiBXCJ8BeQALCbcw",
	"go8SFkICXAqp8yUqDOAcZUq5PXaVUc5UdS7TAUQYACq4veEkIMwI9DVHuSYB4TQ1rJNSfhIQFcaYUqMD",
	"05hapfU6M7uUlowvyTYov6BS0jXZbgNS2OQDTXGHCa5jBMPNGEHHCJk7MW6a4DPRkkZ5aI6Mig2jI3Jb",
	"CJ1RHdcyZzVLEhCJX3MmMSJzLXNsatERfhuQhucuokfEZVFH2FcKdH22LfnR7PhkdHL68y+jP/86PRrN",
	"jk9Odwium+wHib41m1UmuELrl99o9Am/5qi0+RQKrpHbf2mWJSy0LCZ/KKPQpkH2TxIXZE5+mtRAn7hV",
	"NTmTUkjHqm2QmtcYPqHOJccIVjFyZyC6TgSNgClg/J4mLBobnLyRSDUW4PhUiN43drlizE0htIeiGiEV",
	"oYbj3og0RT6YZsP28AXXrxSEjpCfyzeQtwTPIqaHac8BI9bV3pAZLlVFqivVBdcoOU2uUN6jdB5/cfyU",
	"TMFxhWJjQD4I/U7kPHo2EUqCO0Xpw1c6ZGMEEpUSuQwRVlQBFxoWhpa1myfwv8UENR4Kk8ju7qFwF/Fz",
	"bKFmj3GKWGQDw1UehqjUIk9ANijc0yS3/2ihaULmx0EzGCky/7whX3BN5iQWNqrWecEsmZRF5gRN5NP4",
	"oMt926Bay3S9FlJFyfbWrDqiRgEa6j10Q93Y2iddL2vRok7vRK4hV4eQr/buoK/EnUTg//uvMixuLYZq",
	"8GVSZCg1c7YubOlLIHYJaCpybpN/y9hVFmVc4xLtXWh7w0eyrCM6pKpU/djFaGDrb7h+e/3Rm8rrdPSZ",
	"dAW2qt5Wh8Sdgazvip2jboloCxYKS3aPvAxtpJ2Ki4j+gqgvQn2BCheyXxt3z6az2Wg6G81Or2ez+fR0",
	"fnoy/vWX43/VWP5HTDVEAtYiBx0z/gUchGgUMb60MYRpmjDKm2r/hQQkVygvIjKfnVqs+bj+bLgeTedH",
	"Xa4XEAn+SjuOY7h4lUJM7w1DCqFYLBAbDE5+2d6WLprPnguypc2sA42andj1jTCuXHIghAuQHILdBumB",
	"uI2xrXaJ247qwDjQGsyVva0SDUF75m+AYEMWQqbUODuiGkea2bjbL7gtIDyVeOl9X53btEaxr6AUNGTo",
	"m6VXt9nk+JuI1n5nlsXfnYjWoEVRDQEFjqvKPkHHCK4Y3pCUPrxHvtQxmc+mAUkZLz8eBXt0siT2it8q",
	"nJ6qSbvs77jT5g+Pb2xe2hzszI527nJZ4sWR3ar6CuOnqlpAv0B+/7p3QsnzAtOnoquxnsGbrvzy5SWf",
	"Zn7veZzkk7lV+LfEpEnycWEz0KNxbtcFNBVPk/puezyB0Q5iJq/st65pNjo3xYhadhdtAlea8ojKyLUB",
	"Vboe97yAZv3fzr4elKWoFF2i3/8RasoSW9RTJXjZzFuSY1+ULWNSm5QT0ax5DnXw0BC3IFfL6MNJu1c5",
	"2Gtl87R51FptNYpKCX6/jjt3oOpyiiTPVBm1fx+icF+/237nVXZXNc8uAtpVoT+B7oq4h0XWfTG1Xyf3",
	"JGDRYxF/SE5rdSubwYX8IZUQM+HVhbial78aYnwhyqrb9F8GUyllCZkTjTT9q/0wDkVaj7M+5hqukab2",
	"hpBeRXVm+n6IUZrcsopFgnCP8k4ocz+rjeXdfH15YcqqlMovkVhxcNXRDf8JLriWopgN3vD3QmIKLFN5",
	"imb1SqQIb3HBOLOY7u4wqrMQi46gkPx1RsMYYTaemjJaGiVjrTM1n0xWq9WY2uWxkMtJcVZN3l+8Oftw",
	"dTaajafjWKeJtT1dupairfjfSx08agq5pJz9x6VVTZdWwNKejTV7xQ8nW9zaLsXLqt8aQqyZ+TsEr1sx",
	"fgjRsrjoECyKFhsxNNN2HP4m19q0OhgtERIR0qQ02BXKexZasJCA3KNUjvF0fEQC8jBKxFK4WKqvXSPV",
	"EBholoHdUfp8QjM2iUSoJlQp1GpSao6W0jhz1/RhpOnyXIo8c97u2wKWZpVUiGjZ6dZmbpEhpxkjc3I8",
	"PrK4y6iO7YW3YhQedA8Pws11u4mNKUAeZYJxDTRJxEq5ttRfeIM2reuKJQnEIonMCWC6NchW1hUmvJVD",
	"6Tm5FKosMYoRdaO0eJYx3e4Sxzexc9EMIqppT9Ma3+3x+Gx6tEuIat/EP6LeBuRkOt1/ujGB3wbk9JAj",
	"vumrbR7zNKVybZDvU65GVfnNrTnVQs1k03gU2VoM5QMhVBVyPIJURGyxrntc+6XBjskSJi7bUNyHTt5A",
	"TvP1bEdRU2+Z9J6RTEB4CfDtqM8PgZ41j67KS+VGu9m3YND3TPBdEXjmavlDsNeII6NyajLZtN64LBKX",
	"uBeJdihk4pNnAqMyDNmChY8OYTxgPEftmTEOBqbnydBBs+XqA2y/Z+BpvX6yn0z1aPJ8Pj9HDW92GL0Y",
	"9BUgKLO1SWjDkxSNosaUwXzBAR+Yssl+oHdNliqleTaXvlSqe3xIMzjrVTXT07PeI++pP0YCfHQW1Z6/",
	"+uDpiVGeHOnGQsNAXIySymDVaqdtPigCZWt+fGOasBvSQ/GuAZf6cfPnITO5QxBdjuS8NtydUw+IkPsf",
	"a79jrHWSVCDpPrN524fgkBTaRukStR+iTVQWQoxv8un0OLyT9i/e8H+KHELKgSZKwIIlpo2/Wxc5YW2C",
	"teDJ2tKupgqu2TDcV5TrsT8fvwzQg71nDvrp1tOy+p7H+++c1QfCbHhKr7J6M0J3SojHk3jfgD9u7Dto",
	"ZD40mzctt2I6do8SQfXsmn17j+v7BdGPkOYHwXN/Svc1H8/TBj8N3fnLgDv4kQrc/Q9SB3fWfTN/M/x3",
	"/Xzu+7fYw6C/3f4/AAD///E2ss2cLAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

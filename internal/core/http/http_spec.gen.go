// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"d0qdCP3N5rcAAAD//5CwvgSZHwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

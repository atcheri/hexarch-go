// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xZ3XLbuhF+lR2czvSGlmTH6Y+umpM4Hk/TxBP7phNremByReKEBBhgaVnV6Kn6CH2x",
	"DgD+iqQlJU6Tq0QGsPh28WH3w3LDQpXlSqIkw+YblnPNMyTU7tcl0rVWv2NIt5pLk3ISSpp3XMYFj9Fc",
	"28l2XoQm1CK3o2zOXkEqDIFaQjUTQhWhYQHDR57lKbI5e6s0XMg4FSYBLiN4q1GGSQCFQfgEKANYaljA",
	"CXzQsFQa4FppKmI0GMAl6oxLt+wm51KYel1OAUQYABpY3EkWMGEBfSlQr1nAJM/s1mmFnwXMhAlm3Pog",
	"CDPnNK1zO8uQFjJm26D6A9ear9l2G7AyJu95hiMhuE0Q7G42CJQg5H7FpB2CT4w0j4rQLjkpJ5ycskUJ",
	"OueUNJjzZksWMI1fCqExYnPSBba92AG/DVjr5K6iJ+CKaAfsHw1Qs7aL/PTsxfnJ+cs//fnkL3+dnZ6c",
	"vTh/OQKc2tsfBX1rJ5tcSYPuXH7l0Uf8UqAh+ytUklC6//I8T0Xotpj+bqxDm5bZP2hcsjn7ZdoQfepH",
	"zfRCa6X9Vt2ANHtN4CNSoSVGsEpQ+gDxdap4BMKAkA88FdHE8uS1Rk5YkuNjCb0f7GrEhptD6BZFDUNq",
	"Q62DO9ZYK+jO4EUk6DhcEjASu7ismeNR1aZ2UV1JQi15eoP6AbU/i+9+stWm4HeFcmLA3it6qwoZPRuE",
	"yuAolD6xtOccRqDRGFXoEGHFDUhFsLS2XNwGUvIbTJHwUJpEbnb7POAzrsdsX2KHNHtiUyYJd2NvijBE",
	"Y5ZFCrpl4YGnhfsPKeIpm78I2lnCsPmnDfuMazZniXLprknYdsjWEjZnaFMS4SNV87ZBPZZTMxZyw9l2",
	"YUe9UesAD2mP3ZBaU/umm2FSHev8XhUEhTnEfD13xL5R9xpB/vc/xm6xcBRquJdrlaMm4WNdxnIos7sh",
	"4JkqpKvKnWDX5U1IwhjdVeiexpDJqsDvmKpr6FP3osWtv+P6ze2HwRrb1IlPbBewc3VRL1L3lrJDN+wS",
	"qQPRKQkOsXhAWWU21kTVQd/J4u5C/qqi9XAgqlJwr6I1kCozMHCQuKp3CHbOypfGDcv44zuUMSVsfjYL",
	"WCZk9fM0GKjk7ZA4E/0Q7BShTrL+Wk+6IqDriSftgGZyl2FIS7lLudnjnV0deOPlkiFXfdJ7Blf7+bBi",
	"igfS9XnYtQEPhjB3KnEHJk/TD0uXKZ66PKPstDmobX08Hl+x0Yix7SI4ILq2+u/QyEKtyn3XwA1xGXEd",
	"+bpcl41J7xTQjv/Lx3eAZxkaw2McPv8IiYvUVVlulKx0rzM5YUHfWnVhu6Y8RDs2sGiHDy24pbkG4xBP",
	"uuLh4FOr1MzmyWh13SgrNvzmakX7DtSyw90GSoSpUtpvxzjc92/Rl0KV3Gn23GVA9y1j60avCI6mo8PS",
	"zr6E069cPQRlcjgms3eEwuboGnpIAfVprNlmuHYKuVSVwrOqx/Im4yK1rzjk2d/cj0mosuZ196EguEWe",
	"uVvAevX3woptSFDbOrJKVIrwgPpeGXsH64nV/Xt1fQVCQsb150itpCVdxulO/gJXkrQqn8p38p3SmIHI",
	"TZGhHb1RGcIbXAopHG93Z1jXRYil+iyRv8p5mCCcTWYsYIW2TiZEuZlPp6vVasLd8ETpeFquNdN3V68v",
	"3t9cnJxNZpOEstSFncde3nUd/0flw4CbSsdcin973U08dgCreLbG3DU+3Gx5M3ctXlcq5yhj7afBjsHb",
	"dh63RBLkGjqvCyIhY8AoRkhVyNPKR/vSEqE7XxawB9TGA5hNTlnAHk9SFSuf4ujWa/bWHsDzHNyM6pim",
	"PBfTSIVmyo1BMtMKLDpLk9xfqscT4vGlVkXuD6gPH2I7yupD7Li2cAVV5Sh5LticvZicOqrknBJ3PR2M",
	"Mui+daZ8Z2K33ggDKKNcCUnA01StDKxVMSYWgRJOsBJpColKI7sCBHVaMcYdh806VVtlzq6VqSp/2WRp",
	"Vfxnec6OK4+hl63PPRBx4j1PG0p2Gzxns9MxEPW86XCTZRuw89ls/+pWD2kbsJeHLBnqUrgnQ5FlXNsn",
	"3+sh5xpWVX9Z2FUd1kw3rbbe1nGoOJJCtb6SEWQqEss18JpK9o+WOzax21TqsmefOkWLOe3+74jWaKZM",
	"e41QmxC+B/lGZPMh1HPhoVr1Gd8Cyb+Fg0PttB/KwAsvsQ/hXjuP9PnnX0LHUbB8PdlERbsK0sW6BNF5",
	"fN9ZTXLHemQce9OZn5ebhzxDDyFq9QodjOE4X8/3E2h/w9Cx9wBLdZP0+bjrkdQk2e31DJbmgMV4ZKKM",
	"kYYp2mZlCWJyV8xmL8J77f7FO/lPVUDIJfDUKFiK1Kra+zWYHEOxXFvVo2S6drZrke0Lud19xSVNBhLv",
	"8Ne1ZyB6sHfNQR/2/IXpkG32VWRrd5B/INMukY6l2fGajhTwKOr2O0qOebqIsLrMT8u4227b7efMfQd1",
	"iY7Vh+3IrQQlvg8XlE0I/LbaPf5t7WfQkEfRc39Jn246n1+fUWJ+HbuL70Pu/flu4CP4/0GqfsOF6DdN",
	"n4f+Y59wf7x8PY762+3/AgAA//9TnhdvuiIAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

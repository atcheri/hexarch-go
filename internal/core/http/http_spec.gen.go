// Package http provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package http

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RY3W7juhF+lQFPgd7IkvOz/fFV9+zJBkG3u8EmN0US9EykscSzEqklR3HcwE/VR+iL",
	"FaQkS7Ll2C6yOFeJTHJ+v/lmyBcR66LUihRbMXsRJRosiMn4r0via6N/o5hvDSqbI0ut7CdUaYUp2Wu3",
	"2e1LyMZGlm5VzMR7yKVl0HNod0KsE7IiEPSMRZmTmImP2sCFSnNpM0CVwEdDKs4CqCzBHZAKYG7gASbw",
	"xcBcG4BrbbhKyVIAl2QKVP7YTYlK2vW5kgNIKACy8HCvRCCkM+h7RWYpAqGwcKrz1n4RCBtnVKDzQTIV",
	"3mlelm6XZSNVKlZB+wMag0uxWgWiiclnLGhHCG4zAqfNBYEzgrI+EfZDcCfYYFLF7sik2TA5EQ+N0SVy",
	"1tlcdipFIAx9r6ShRMzYVNT3YsP4VSB6mbtKXjFXJhvG/tECd2eHlp+cnp1Pzt/96c+Tv/x1ejI5PTt/",
	"t8Nw7qs/yvSV22xLrSz5vPyMyVf6XpFl9xVrxaT8v1iWuYy9iug36xx66Yn9g6G5mImfog7oUb1qowtj",
	"tKlVDQPS6QrhK3FlFCWwyEjVAcJlrjEBaUGqJ8xlEjqcfDCETL14f23M3w54u+JCjhD7g0k/3F7gRSJ5",
	"hzjM8y9zMbt73b/dFq0egtdMUkCJHDPpSjEZhfkNmScydfx+eDZapVBrhWZjID5r/qgrlbyZCa3AnaZs",
	"g8HUOKEEDFmrKxMTLNCC0gxzJ8vHbYRGL4n7Gd1jf1N8vhJuqjgma+dVDqYn4Qnzyv/DmjEXs7OgX33W",
	"o+UbLcVMZNrTSEeEbslxtJgJcqXO9MztvlWwXiu5W4vRolg9uNVaqHMAY94jN+be1m3R3TLrgXR81BVD",
	"ZQ8Rv967Q77Vj4ZA/fc/1ql48Gnu8FEaXZJhWce6ieUYY/olwEJXyne7QbDXbUMqppQ8XIfZGBPZNs4N",
	"Ueve9Bp2e9j6Oy1/uf0y2rs6/r0TmwZ7Vx/Wh/Sjg+xYFVwSD0z0HRohlU+k2vYhuqh602su2q6Dhmd/",
	"1slyPCYt2z7qZAmsG7YE3OhOw7TVWR9p5h5NY03eo3qsgfYj5k4HtfDmyHa4at7e6+gxDP66sG0uHwub",
	"I/SNoDlTWwYfCrhhVAmapKbaNcuEW3Emt/6vOgIjUS3IWkxpPLEJMcrcEydardrxw4sMuwLqpNUjxaao",
	"2kS3NnJoI389cxtxnY1jmRz2g4Oz1jaol1ejNXSjIXj41VNLv7jWncSXGWfStjX26zEOb/s3NgM0HazT",
	"uYmA4UjpaGaLM3cW32FFtq+8toluy4Kmygt8/kQq5UzMTqeBKKRqP09G4NXrKy9HU+4hfFuzR6dmnGql",
	"mut2IHBN0uGmQJm7YZqw+Jv/CGNddEP2l4rhlrDwVSC26PrCzU+QkXGsuch0TvBE5lFbV4PrjW39vb++",
	"AqmgQPMt0QvlQFcg36uf4Eqx0c2N5V590oYKkKWtCnKrN7og+IXmUkmP280dznUZUzOsNJa/LzHOCE7D",
	"qQhEZZyTGXNpZ1G0WCxC9MuhNmnUnLXRp6sPF59vLian4TTMuMh92DGtp4Gh4/9ofRhxU5sUlfy3Tx4w",
	"pt7Axqr+mi/jw8U2lbkpcd0UjxLWo4FNgbd9HndAkuzv1R8qZqlSoCQlyHWMeeujG55l7PMrAvFExtYG",
	"TMMTEYjnSa5TXVMc39YjXk8HYFmC39GmKcJSRomObYTWEtuoNZa8pLCsi+p5wpheGl2VdYIa8/0v4BQ3",
	"qRs45IayQOiSFJZSzMRZeOIB4q6Wvii98j5JRi+9G/LKbUmJx9qOtEAqKbVUDJjnemFhqSvXIFPyv2wG",
	"fjjcNJ04vK+m07P40fi/dK/+qSuIUQHmVsNc5q7gHpdgS4rlfOkSolW+9LLX9Q+cIXvtC1Qc+uw6Emsv",
	"y7Md7y8+EN0zzY5e1G2Jtt4rHAr3nDno6ccBb3BHP51Od3Hmel+05y60CsT59Hy/mPXlbxWId4foHbu7",
	"+iG1Kgo0y2auvW4LeGM4HoVpIEptj8QZa8AkGY5iDcZquMi4ZZERSFxrO5KYN4DEQ92rehPqm9yoDxpg",
	"x+7ZdduEBBl3Tf3NPETdlWMLjif7YfHKI4lD4gHA6r1MvR0Wa7OOg+Mq2MeM0cvgQc4zZVkdj+D6NqES",
	"KHQi58v/G83VjwHzfn4beRb9USWw/zp4SAFs39/eBv67Hhl/V/A7o46E/mr1vwAAAP//bT6oMcwYAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

openapi: 3.1.0

info:
  version: "0.1"
  title: Cutting edge localization Service API
  description: |
    Enter here a whole verbose description of the API in markdown format
    # Introduction
    Lorem ipsume
    # Some Definitions
    Lorem ipsume
  contact:
    name: Out Team name
    email: team@email.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: /api/docs/assets/translate-logo.png
    altText: Translation app logo
  tags:
    - name: tag-1
      description: |
        Markdown description of the tag
    - name: tag-2
      description: |
        Markdown description of the tag
    - name: tag-3
      description: |
        Markdown description of the tag
  x-tagGroups:
    - name: Group 1
      tags:
        - tag-1
    - name: Group 2
      tags:
        - tag-1
        - tag-2
    - name: Group 3
      tags:
        - tag-3

paths:
  /api/words:
    get:
      summary: Retrieves a list of words.
      description: Get all words (that the user owns ?).
      operationId: getWords
      parameters:
        - $ref: '#/components/parameters/GetWordSearchParam'
        - $ref: '#/components/parameters/GetWordOffsetParam'
        - $ref: '#/components/parameters/GetWordLimitParam'
      responses:
        "200":
          $ref: '#/components/responses/WordsGetResponse'
#        "401":
#          $ref: '#/components/responses/Unauthorized'
#        "403":
#          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tag-1
    post:
      summary: Create a new word.
      description: Creates a new word with a key and a content.
      operationId: postWord
      requestBody:
        content:
          application/json:
            example:
              key: abcd
              content: A-b-C-D
            schema:
              $ref: '#/components/schemas/WordsPostRequestBody'
        description: Required data to create a word
      responses:
        "200":
          $ref: '#/components/responses/WordsPostResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
#        "403":
#          $ref: '#/components/responses/Forbidden'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tag-1
    put:
      description: Edit an existing word.
      summary: Edit a word.
      operationId: putWord
      requestBody:
        content:
          application/json:
            example:
              key: abcd
              content: D-C-b-a
            schema:
              $ref: '#/components/schemas/WordsPutRequestBody'
        description: Required data to edit a word
      responses:
        "200":
          $ref: '#/components/responses/WordsPutResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tag-1
    delete:
      summary: Delete a word.
      description: Delete an existing word.
      operationId: deleteWord
      requestBody:
        content:
          application/json:
            example:
              key: abcd
            schema:
              $ref: '#/components/schemas/WordsDeleteRequestBody'
        description: Required data to delete a word
      responses:
        "200":
          $ref: '#/components/responses/WordsDeleteResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        #        "403":
        #          $ref: '#/components/responses/Forbidden'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          $ref: '#/components/responses/InternalServerError'
      tags:
        - tag-1
components:
  parameters:
    GetWordSearchParam:
      description: |
        Parameter used to search for a word.
      example:
      in: query
      name: q
      required: false
      schema:
        description: Rules for the search query parameter
        #        maxLength: 10
        #        minLength: 3
        #        pattern: ^[a-z0-9_\-]+$
        type: string
    GetWordOffsetParam:
      description: |
        Offset pagination parameter. Starts from 0
      in: query
      name: offset
      required: true
      schema:
        type: integer
    GetWordLimitParam:
      description: |
        Limit pagination parameter. Starts from 5
      in: query
      name: limit
      required: true
      schema:
        type: integer
  responses:
    WordsGetResponse:
      description: GET words response.
      content:
        application/json:
          schema:
            type: object
            required:
              - words
              - count
            properties:
              words:
                description: The list of words
                type: array
                items:
                  $ref: "#/components/schemas/WordDTO"
              count:
                description: The total amount of records
                type: integer
    WordsPostResponse:
      description: POST words response.
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                description: The id of the created word
                type: string
    WordsPutResponse:
      description: PUT words response.
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                description: The id of the updated word
                type: string
    WordsDeleteResponse:
      description: DELETE words response.
      content:
        application/json:
          schema:
            type: object
            required:
              - success
            properties:
              success:
                description: Contains the successful message of word deletion
                type: string
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: BadRequest. Returned when the payload is invalid.
    Conflict:
      description: Conflict. Returned when resource cannot be created because of business rules violation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    WordsPostRequestBody:
      $ref: "#/components/schemas/WordDTO"
    WordsPutRequestBody:
      $ref: "#/components/schemas/WordDTO"
    WordsDeleteRequestBody:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          maxLength: 20
          minLength: 1
    WordDTO:
      type: object
      required:
        - key
        - content
      properties:
        key:
          type: string
          maxLength: 20
          minLength: 1
        content:
          type: string
          maxLength: 50
          minLength: 1
    Error:
      description: Standard Error response.
      type: object
      required:
        - error_type
        - name
        - message
      properties:
        error_type:
          type: string
          description: "example: `UNAUTHORIZED`."
        name:
          type: string
          description: Error name.
        message:
          type: string
          description: The detailed reason of the error.
#  securitySchemes:
